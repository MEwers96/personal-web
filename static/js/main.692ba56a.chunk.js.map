{"version":3,"sources":["Img/logo.svg","Img/Me.jpeg","Img/javaScriptLogo.png","Img/html.png","Img/cssLogo.png","Components/ApplicationBar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ApplicationBar","props","state","MenuOpen","AppBar","position","style","background","Toolbar","href","textDecoration","MenuItem","color","marginLeft","marginRight","React","Component","App","makeStyles","theme","root","flexGrow","menuButton","spacing","title","container","width","ref","parallax","pages","id","className","height","Typography","fontSize","steps","loop","Infinity","wrapper","type","size","left","right","margin","bottom","top","onPress","scrollTo","offset","speed","factor","backgroundColor","src","me","display","logo","javaScriptIcon","html","css","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.692ba56a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/Me.a80b649f.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/javaScriptLogo.d4e9a58b.png\";","module.exports = __webpack_public_path__ + \"static/media/html.4d1352fd.png\";","module.exports = __webpack_public_path__ + \"static/media/cssLogo.8c676f39.png\";","import React from 'react'\nimport {AppBar, MenuItem, Toolbar} from \"@material-ui/core\";\n\n\n\n\nclass ApplicationBar extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {MenuOpen : false}\n\n    }\n\n\n\n    render(){\n        return(\n            <AppBar position={\"fixed\"} style={{background: '#f5d142'}}>\n\n\n                <Toolbar>\n                    <a href={'/personal-web'} style={{textDecoration: \"none\"}} ><MenuItem style={{color: 'black'}}>Home</MenuItem></a>\n\n                    <section style={{marginLeft: 'auto', marginRight: -12}}>\n                        <Toolbar>\n                            <a style={{textDecoration: \"none\"}} href={'https://www.linkedin.com/in/mewersdev/'}><MenuItem style={{color: 'black'}}>LinkedIn</MenuItem></a>\n                            <a style={{textDecoration: \"none\"}} href={'https://github.com/MEwers96'}><MenuItem style={{color: 'black'}}>Github</MenuItem></a>\n                        </Toolbar>\n                    </section>\n                </Toolbar>\n            </AppBar>\n        )\n    }\n\n}\nexport default ApplicationBar","import React from 'react';\nimport logo from './Img/logo.svg';\nimport me from './Img/Me.jpeg'\nimport javaScriptIcon from './Img/javaScriptLogo.png'\nimport html from './Img/html.png'\nimport css from './Img/cssLogo.png'\nimport './App.css';\nimport {makeStyles, MuiThemeProvider} from '@material-ui/core/styles';\nimport ApplicationBar from \"./Components/ApplicationBar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Typical from 'react-typical'\nimport { AwesomeButton } from \"react-awesome-button\";\nimport \"react-awesome-button/dist/styles.css\";\nimport {Parallax, ParallaxLayer} from \"react-spring/renderprops-addons\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  container:{\n    position: \"relative\",\n    width: 500,\n  }\n}));\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n    return (\n        <div>\n            <ApplicationBar/>\n            <Parallax ref={ref => (this.parallax = ref)} pages={3}>\n          <div id={'introPage'} className={'body'} style={{position: 'relative', height: '150vh'}}>\n              <Typography className={'text'} style={{fontSize: '12.5vh'}}>\n                  <Typical\n                      steps={[750, 'Welcome', 1500, '', 750, 'ようこそ', 1500,'', 750, '어서 오십시오', 1500, '',]}\n                      loop={Infinity}\n                      wrapper=\"p\"\n                  />\n\n              </Typography>\n              <AwesomeButton className={'button'}\n                             type={'secondary'}\n                             size={'large'}\n                             style={{position: 'absolute', left: 0, right: 0, margin: 'auto', bottom: '80vh', top: '35vh', height: '6vh'}}\n                             onPress={() => this.parallax.scrollTo( 1)}\n                             >\n                  Learn about me!\n              </AwesomeButton>\n\n              <ParallaxLayer offset={1} speed={.2} factor={1} style={{ backgroundColor: 'black' }}/>\n\n              <ParallaxLayer offset={1.23} speed={.3}>\n                  <Typography style={{color: 'white', marginLeft: '50%', top: '25%', fontSize: '5vh'}}>\n                      Welcome to my Website!\n                  </Typography>\n\n\n                  <Typography style={{color: 'white', marginLeft: '50%', top: '30%',marginRight: '10%', fontSize: '2.5vh'}}>\n                      Hi! My name is Michael Ewers and this is my personal website. The majority of information and functionality is\n                      currently under construction!\n                  </Typography>\n\n              </ParallaxLayer>\n\n              <ParallaxLayer offset={1.25} speed={.4}>\n                  <img src={me} style={{display: 'block',marginLeft: '20%', width: '25%'}}/>\n              </ParallaxLayer>\n\n\n\n              <ParallaxLayer offset={1.2} speed={.5}>\n                  <img src={logo} style={{display: 'block',marginLeft: '5%', width: '10%'}}/>\n              </ParallaxLayer>\n\n              <ParallaxLayer offset={1.4} speed={.6}>\n                  <img src={javaScriptIcon} style={{display: 'block',marginLeft: '7.5%', width: '5%'}}/>\n              </ParallaxLayer>\n\n              <ParallaxLayer offset={1.6} speed={.7}>\n                  <img src={html} style={{display: 'block',marginLeft: '7.5%', width: '5%'}}/>\n              </ParallaxLayer>\n\n              <ParallaxLayer offset={1.8} speed={.8}>\n                  <img src={css} style={{display: 'block',marginLeft: '7.5%', width: '5%'}}/>\n\n\n              </ParallaxLayer>\n          </div>\n            </Parallax>\n        </div>\n\n\n\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}